
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/gallery_examples/01_basic/steady_state_thermal_analysis.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_examples_01_basic_steady_state_thermal_analysis.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_01_basic_steady_state_thermal_analysis.py:

.. _ref_steady_state_thermal:

Steady state thermal analysis
-----------------------------

This example problem demonstrates the use of a
simple steady-state thermal analysis to determine the temperatures,
thermal gradients, heat flow rates, and heat fluxes that are caused
by thermal loads that do not vary over time. A steady-state thermal
analysis calculates the effects of steady thermal loads on a system
or component, in this example, a long bar model.

.. GENERATED FROM PYTHON SOURCE LINES 37-39

Import the necessary libraries
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 39-54

.. code-block:: Python


    from pathlib import Path
    from typing import TYPE_CHECKING

    from PIL import Image
    from matplotlib import image as mpimg
    from matplotlib import pyplot as plt
    from matplotlib.animation import FuncAnimation

    from ansys.mechanical.core import App
    from ansys.mechanical.core.examples import delete_downloads, download_file

    if TYPE_CHECKING:
        import Ansys








.. GENERATED FROM PYTHON SOURCE LINES 55-57

Initialize the embedded application
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 57-61

.. code-block:: Python


    app = App(globals=globals())
    print(app)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Ansys Mechanical [Ansys Mechanical Enterprise]
    Product Version:252
    Software build date: 06/13/2025 11:25:56





.. GENERATED FROM PYTHON SOURCE LINES 62-64

Create functions to set camera and display images
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 64-136

.. code-block:: Python


    # Set the path for the output files (images, gifs, mechdat)
    output_path = Path.cwd() / "out"


    def set_camera_and_display_image(
        camera,
        graphics,
        graphics_image_export_settings,
        image_output_path: Path,
        image_name: str,
    ) -> None:
        """Set the camera to fit the model and display the image.

        Parameters
        ----------
        camera : Ansys.ACT.Common.Graphics.MechanicalCameraWrapper
            The camera object to set the view.
        graphics : Ansys.ACT.Common.Graphics.MechanicalGraphicsWrapper
            The graphics object to export the image.
        graphics_image_export_settings : Ansys.Mechanical.Graphics.GraphicsImageExportSettings
            The settings for exporting the image.
        image_output_path : Path
            The path to save the exported image.
        image_name : str
            The name of the exported image file.
        """
        # Set the camera to fit the mesh
        camera.SetFit()
        # Export the mesh image with the specified settings
        image_path = image_output_path / image_name
        graphics.ExportImage(str(image_path), image_export_format, graphics_image_export_settings)
        # Display the exported mesh image
        display_image(image_path)


    def display_image(
        image_path: str,
        pyplot_figsize_coordinates: tuple = (16, 9),
        plot_xticks: list = [],
        plot_yticks: list = [],
        plot_axis: str = "off",
    ) -> None:
        """Display the image with the specified parameters.

        Parameters
        ----------
        image_path : str
            The path to the image file to display.
        pyplot_figsize_coordinates : tuple
            The size of the figure in inches (width, height).
        plot_xticks : list
            The x-ticks to display on the plot.
        plot_yticks : list
            The y-ticks to display on the plot.
        plot_axis : str
            The axis visibility setting ('on' or 'off').
        """
        # Set the figure size based on the coordinates specified
        plt.figure(figsize=pyplot_figsize_coordinates)
        # Read the image from the file into an array
        plt.imshow(mpimg.imread(image_path))
        # Get or set the current tick locations and labels of the x-axis
        plt.xticks(plot_xticks)
        # Get or set the current tick locations and labels of the y-axis
        plt.yticks(plot_yticks)
        # Turn off the axis
        plt.axis(plot_axis)
        # Display the figure
        plt.show()









.. GENERATED FROM PYTHON SOURCE LINES 137-139

Configure graphics for image export
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 139-156

.. code-block:: Python


    graphics = app.Graphics
    camera = graphics.Camera

    # Set the camera orientation to isometric view
    camera.SetSpecificViewOrientation(ViewOrientationType.Iso)
    camera.SetFit()

    # Set the image export format and settings
    image_export_format = GraphicsImageExportFormat.PNG
    settings_720p = Ansys.Mechanical.Graphics.GraphicsImageExportSettings()
    settings_720p.Resolution = GraphicsResolutionType.EnhancedResolution
    settings_720p.Background = GraphicsBackgroundType.White
    settings_720p.Width = 1280
    settings_720p.Height = 720
    settings_720p.CurrentGraphicsDisplay = False








.. GENERATED FROM PYTHON SOURCE LINES 157-159

Download the geometry file
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 159-163

.. code-block:: Python


    # Download the geometry file from the ansys/example-data repository
    geometry_path = download_file("LONGBAR.x_t", "pymechanical", "embedding")








.. GENERATED FROM PYTHON SOURCE LINES 164-166

Import the geometry
~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 166-183

.. code-block:: Python


    # Define the model
    model = app.Model

    # Add the geometry import group and set its preferences
    geometry_import_group = model.GeometryImportGroup
    geometry_import = geometry_import_group.AddGeometryImport()
    geometry_import_format = Ansys.Mechanical.DataModel.Enums.GeometryImportPreference.Format.Automatic
    geometry_import_preferences = Ansys.ACT.Mechanical.Utilities.GeometryImportPreferences()
    geometry_import_preferences.ProcessNamedSelections = True

    # Import the geometry file with the specified format and preferences
    geometry_import.Import(geometry_path, geometry_import_format, geometry_import_preferences)

    # Visualize the model in 3D
    app.plot()








.. tab-set::



   .. tab-item:: Static Scene



            
     .. image-sg:: /examples/gallery_examples/01_basic/images/sphx_glr_steady_state_thermal_analysis_001.png
        :alt: steady state thermal analysis
        :srcset: /examples/gallery_examples/01_basic/images/sphx_glr_steady_state_thermal_analysis_001.png
        :class: sphx-glr-single-img
     


   .. tab-item:: Interactive Scene



       .. offlineviewer:: /__w/pymechanical/pymechanical/doc/source/examples/gallery_examples/01_basic/images/sphx_glr_steady_state_thermal_analysis_001.vtksz



.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    []



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Add steady state thermal analysis
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 186-206

.. code-block:: Python


    # Add a steady state thermal analysis to the model
    model.AddSteadyStateThermalAnalysis()
    # Set the Mechanical unit system to Standard MKS
    app.ExtAPI.Application.ActiveUnitSystem = MechanicalUnitSystem.StandardMKS

    # Get the steady state thermal analysis
    stat_therm = model.Analyses[0]

    # Add a coordinate system to the model
    coordinate_systems = model.CoordinateSystems

    # Add two coordinate systems
    lcs1 = coordinate_systems.AddCoordinateSystem()
    lcs1.OriginX = Quantity("0 [m]")

    lcs2 = coordinate_systems.AddCoordinateSystem()
    lcs2.OriginX = Quantity("0 [m]")
    lcs2.PrimaryAxisDefineBy = CoordinateSystemAlignmentType.GlobalY








.. GENERATED FROM PYTHON SOURCE LINES 207-209

Create named selections and construction geometry
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 211-212

Create a function to add a named selection

.. GENERATED FROM PYTHON SOURCE LINES 212-235

.. code-block:: Python



    def setup_named_selection(name, scoping_method=GeometryDefineByType.Worksheet):
        """Create a named selection with the specified scoping method and name.

        Parameters
        ----------
        name : str
            The name of the named selection.
        scoping_method : GeometryDefineByType
            The scoping method for the named selection.

        Returns
        -------
        Ansys.ACT.Automation.Mechanical.NamedSelection
            The created named selection.
        """
        ns = model.AddNamedSelection()
        ns.ScopingMethod = scoping_method
        ns.Name = name
        return ns









.. GENERATED FROM PYTHON SOURCE LINES 236-237

Create a function to add generation criteria to the named selection

.. GENERATED FROM PYTHON SOURCE LINES 237-286

.. code-block:: Python



    def add_generation_criteria(
        named_selection,
        value,
        set_active_action_criteria=True,
        active=True,
        action=SelectionActionType.Add,
        entity_type=SelectionType.GeoFace,
        criterion=SelectionCriterionType.Size,
        operator=SelectionOperatorType.Equal,
    ):
        """Add generation criteria to the named selection.

        Parameters
        ----------
        named_selection : Ansys.ACT.Automation.Mechanical.NamedSelection
            The named selection to which the criteria will be added.
        value : Quantity
            The value for the criteria.
        active : bool
            Whether the criteria is active.
        action : SelectionActionType
            The action type for the criteria.
        entity_type : SelectionType
            The entity type for the criteria.
        criterion : SelectionCriterionType
            The criterion type for the criteria.
        operator : SelectionOperatorType
            The operator for the criteria.
        """
        generation_criteria = named_selection.GenerationCriteria
        criteria = Ansys.ACT.Automation.Mechanical.NamedSelectionCriterion()

        set_criteria_properties(
            criteria,
            value,
            set_active_action_criteria,
            active,
            action,
            entity_type,
            criterion,
            operator,
        )

        if set_active_action_criteria:
            generation_criteria.Add(criteria)









.. GENERATED FROM PYTHON SOURCE LINES 287-288

Create a function to set the properties of the generation criteria

.. GENERATED FROM PYTHON SOURCE LINES 288-329

.. code-block:: Python



    def set_criteria_properties(
        criteria,
        value,
        set_active_action_criteria=True,
        active=True,
        action=SelectionActionType.Add,
        entity_type=SelectionType.GeoFace,
        criterion=SelectionCriterionType.Size,
        operator=SelectionOperatorType.Equal,
    ):
        """Set the properties of the generation criteria.

        Parameters
        ----------
        criteria : Ansys.ACT.Automation.Mechanical.NamedSelectionCriterion
            The generation criteria to set properties for.
        active : bool
            Whether the criteria is active.
        action : SelectionActionType
            The action type for the criteria.
        entity_type : SelectionType
            The entity type for the criteria.
        criterion : SelectionCriterionType
            The criterion type for the criteria.
        operator : SelectionOperatorType
            The operator for the criteria.
        """
        if set_active_action_criteria:
            criteria.Active = active
            criteria.Action = action

        criteria.EntityType = entity_type
        criteria.Criterion = criterion
        criteria.Operator = operator
        criteria.Value = value

        return criteria









.. GENERATED FROM PYTHON SOURCE LINES 330-331

Add named selections to the model

.. GENERATED FROM PYTHON SOURCE LINES 331-383

.. code-block:: Python


    face1 = setup_named_selection("Face1")
    add_generation_criteria(face1, Quantity("20 [m]"), criterion=SelectionCriterionType.LocationZ)
    face1.Activate()
    face1.Generate()

    face2 = setup_named_selection("Face2")
    add_generation_criteria(face2, Quantity("0 [m]"), criterion=SelectionCriterionType.LocationZ)
    face2.Activate()
    face2.Generate()

    face3 = setup_named_selection("Face3")
    add_generation_criteria(face3, Quantity("1 [m]"), criterion=SelectionCriterionType.LocationX)
    add_generation_criteria(
        face3,
        Quantity("2 [m]"),
        criterion=SelectionCriterionType.LocationY,
        action=SelectionActionType.Filter,
    )
    add_generation_criteria(
        face3,
        Quantity("12 [m]"),
        criterion=SelectionCriterionType.LocationZ,
        action=SelectionActionType.Filter,
    )
    add_generation_criteria(face3, Quantity("4.5 [m]"), criterion=SelectionCriterionType.LocationZ)
    add_generation_criteria(
        face3,
        Quantity("2 [m]"),
        criterion=SelectionCriterionType.LocationY,
        action=SelectionActionType.Filter,
    )
    face3.Activate()
    face3.Generate()

    body1 = setup_named_selection("Body1")
    body1.GenerationCriteria.Add(None)
    set_criteria_properties(
        body1.GenerationCriteria[0],
        Quantity("1 [m]"),
        set_active_action_criteria=False,
        criterion=SelectionCriterionType.LocationZ,
    )
    body1.GenerationCriteria.Add(None)
    set_criteria_properties(
        body1.GenerationCriteria[1],
        Quantity("1 [m]"),
        set_active_action_criteria=False,
        criterion=SelectionCriterionType.LocationZ,
    )
    body1.Generate()








.. GENERATED FROM PYTHON SOURCE LINES 384-385

Create construction geometry

.. GENERATED FROM PYTHON SOURCE LINES 385-404

.. code-block:: Python


    # Add construction geometry to the model
    construction_geometry = model.AddConstructionGeometry()
    # Add a path to the construction geometry
    construction_geom_path = construction_geometry.AddPath()

    # Set the coordinate system for the construction geometry path
    construction_geom_path.StartYCoordinate = Quantity(2, "m")
    construction_geom_path.StartZCoordinate = Quantity(20, "m")
    construction_geom_path.StartZCoordinate = Quantity(20, "m")
    construction_geom_path.EndXCoordinate = Quantity(2, "m")

    # Add a surface to the construction geometry
    surface = construction_geometry.AddSurface()
    # Set the coordinate system for the surface
    surface.CoordinateSystem = lcs2
    # Update the solids in the construction geometry
    construction_geometry.UpdateAllSolids()








.. GENERATED FROM PYTHON SOURCE LINES 405-407

Define the boundary condition and add results
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 409-410

Create a function to set the location and output for the temperature boundary condition

.. GENERATED FROM PYTHON SOURCE LINES 410-428

.. code-block:: Python



    def set_loc_and_output(temp, location, values):
        """Add a temperature set output to the boundary condition.

        Parameters
        ----------
        temp : Ansys.Mechanical.DataModel.SteadyStateThermal.Temperature
            The temperature boundary condition.
        location : Ansys.Mechanical.DataModel.Geometry.GeometryObject
            The location of the temperature boundary condition.
        values : list[Quantity]
            The list of values for the temperature.
        """
        temp.Location = location
        temp.Magnitude.Output.DiscreteValues = [Quantity(value) for value in values]









.. GENERATED FROM PYTHON SOURCE LINES 429-430

Create a function to set the inputs and outputs for the temperature boundary condition

.. GENERATED FROM PYTHON SOURCE LINES 430-457

.. code-block:: Python



    def set_inputs_and_outputs(
        condition,
        input_quantities: list = ["0 [sec]", "1 [sec]", "2 [sec]"],
        output_quantities: list = ["22[C]", "30[C]", "40[C]"],
    ):
        """Set the temperature inputs for the boundary condition.

        Parameters
        ----------
        condition : Ansys.Mechanical.DataModel.SteadyStateThermal.Temperature
            The temperature boundary condition.
        inputs : list[Quantity]
            The list of input values for the temperature.
        """
        # Set the magnitude for temperature or the ambient temperature for radiation
        if "Temperature" in str(type(condition)):
            prop = condition.Magnitude
        elif "Radiation" in str(type(condition)):
            prop = condition.AmbientTemperature

        # Set the inputs and outputs for the temperature or radiation
        prop.Inputs[0].DiscreteValues = [Quantity(value) for value in input_quantities]
        prop.Output.DiscreteValues = [Quantity(value) for value in output_quantities]









.. GENERATED FROM PYTHON SOURCE LINES 458-459

Add temperature boundary conditions to the steady state thermal analysis

.. GENERATED FROM PYTHON SOURCE LINES 459-468

.. code-block:: Python


    temp = stat_therm.AddTemperature()
    set_loc_and_output(temp, face1, ["22[C]", "30[C]"])
    temp2 = stat_therm.AddTemperature()
    set_loc_and_output(temp2, face2, ["22[C]", "60[C]"])

    set_inputs_and_outputs(temp)
    set_inputs_and_outputs(temp2, output_quantities=["22[C]", "50[C]", "80[C]"])








.. GENERATED FROM PYTHON SOURCE LINES 469-470

Add radiation

.. GENERATED FROM PYTHON SOURCE LINES 470-477

.. code-block:: Python


    # Add a radiation boundary condition to the steady state thermal analysis
    radiation = stat_therm.AddRadiation()
    radiation.Location = face3
    set_inputs_and_outputs(radiation)
    radiation.Correlation = RadiationType.SurfaceToSurface








.. GENERATED FROM PYTHON SOURCE LINES 478-479

Set up the analysis settings

.. GENERATED FROM PYTHON SOURCE LINES 479-488

.. code-block:: Python


    analysis_settings = stat_therm.AnalysisSettings
    analysis_settings.NumberOfSteps = 2
    analysis_settings.CalculateVolumeEnergy = True

    # Activate the static thermal analysis and display the image
    stat_therm.Activate()
    set_camera_and_display_image(camera, graphics, settings_720p, output_path, "bc_steady_state.png")




.. image-sg:: /examples/gallery_examples/01_basic/images/sphx_glr_steady_state_thermal_analysis_002.png
   :alt: steady state thermal analysis
   :srcset: /examples/gallery_examples/01_basic/images/sphx_glr_steady_state_thermal_analysis_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 489-491

Add results
~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 493-494

Add temperature results to the solution

.. GENERATED FROM PYTHON SOURCE LINES 494-514

.. code-block:: Python


    # Get the solution object for the steady state thermal analysis
    stat_therm_soln = model.Analyses[0].Solution

    # Add four temperature results to the solution
    temp_rst = stat_therm_soln.AddTemperature()
    temp_rst.By = SetDriverStyle.MaximumOverTime

    # Set the temperature location to the body1 named selection
    temp_rst2 = stat_therm_soln.AddTemperature()
    temp_rst2.Location = body1

    # Set the temperature location to the construction geometry path
    temp_rst3 = stat_therm_soln.AddTemperature()
    temp_rst3.Location = construction_geom_path

    # Set the temperaature location to the construction geometry surface
    temp_rst4 = stat_therm_soln.AddTemperature()
    temp_rst4.Location = surface








.. GENERATED FROM PYTHON SOURCE LINES 515-516

Add the total and directional heat flux to the solution

.. GENERATED FROM PYTHON SOURCE LINES 516-531

.. code-block:: Python


    total_heat_flux = stat_therm_soln.AddTotalHeatFlux()
    directional_heat_flux = stat_therm_soln.AddTotalHeatFlux()

    # Set the thermal result type and normal orientation for the directional heat flux
    directional_heat_flux.ThermalResultType = TotalOrDirectional.Directional
    directional_heat_flux.NormalOrientation = NormalOrientationType.ZAxis

    # Set the coordinate system's primary axis for the directional heat flux
    lcs2.PrimaryAxisDefineBy = CoordinateSystemAlignmentType.GlobalZ
    directional_heat_flux.CoordinateSystem = lcs2

    # Set the display option for the directional heat flux
    directional_heat_flux.DisplayOption = ResultAveragingType.Averaged








.. GENERATED FROM PYTHON SOURCE LINES 532-533

Add thermal error and temperature probes

.. GENERATED FROM PYTHON SOURCE LINES 533-547

.. code-block:: Python


    # Add a thermal error to the solution
    thermal_error = stat_therm_soln.AddThermalError()

    # Add a temperature probe to the solution
    temp_probe = stat_therm_soln.AddTemperatureProbe()

    # Set the temperature probe location to the face1 named selection
    temp_probe.GeometryLocation = face1

    # Set the temperature probe location method to the coordinate system
    temp_probe.LocationMethod = LocationDefinitionMethod.CoordinateSystem
    temp_probe.CoordinateSystemSelection = lcs2








.. GENERATED FROM PYTHON SOURCE LINES 548-549

Add a heat flux probe

.. GENERATED FROM PYTHON SOURCE LINES 549-559

.. code-block:: Python


    hflux_probe = stat_therm_soln.AddHeatFluxProbe()

    # Set the location method for the heat flux probe
    hflux_probe.LocationMethod = LocationDefinitionMethod.CoordinateSystem
    # Set the coordinate system for the heat flux probe
    hflux_probe.CoordinateSystemSelection = lcs2
    # Set the result selection to the z-axis for the heat flux probe
    hflux_probe.ResultSelection = ProbeDisplayFilter.ZAxis








.. GENERATED FROM PYTHON SOURCE LINES 560-561

Add a reaction probe

.. GENERATED FROM PYTHON SOURCE LINES 561-571

.. code-block:: Python


    # Update the analysis settings to allow output control nodal forces
    analysis_settings.NodalForces = OutputControlsNodalForcesType.Yes

    # Add a reaction probe to the solution
    reaction_probe = stat_therm_soln.AddReactionProbe()
    # Set the reaction probe geometry location to the face1 named selection
    reaction_probe.LocationMethod = LocationDefinitionMethod.GeometrySelection
    reaction_probe.GeometryLocation = face1








.. GENERATED FROM PYTHON SOURCE LINES 572-573

Add a radiation probe

.. GENERATED FROM PYTHON SOURCE LINES 573-580

.. code-block:: Python


    radiation_probe = stat_therm_soln.AddRadiationProbe()
    # Set the radiation probe boundary condition to the radiation boundary condition
    radiation_probe.BoundaryConditionSelection = radiation
    # Display all results for the radiation probe
    radiation_probe.ResultSelection = ProbeDisplayFilter.All








.. GENERATED FROM PYTHON SOURCE LINES 581-583

Solve the solution
~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 583-588

.. code-block:: Python


    # Solve the steady state thermal analysis solution
    stat_therm_soln.Solve(True)









.. GENERATED FROM PYTHON SOURCE LINES 592-594

Show messages
~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 594-598

.. code-block:: Python


    # Print all messages from Mechanical
    app.messages.show()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Severity: Warning
    DisplayString: A result is scoped to a construction geometry object which might have points shared with multiple bodies. Please check the results.   Object=Surface   Result=Temperature 4
    Severity: Info
    DisplayString: The requested license was received from the License Manager after 35 seconds.




.. GENERATED FROM PYTHON SOURCE LINES 599-601

Display the results
~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 601-606

.. code-block:: Python


    # Activate the total body temperature and display the image
    app.Tree.Activate([temp_rst])
    set_camera_and_display_image(camera, graphics, settings_720p, output_path, "total_body_temp.png")




.. image-sg:: /examples/gallery_examples/01_basic/images/sphx_glr_steady_state_thermal_analysis_003.png
   :alt: steady state thermal analysis
   :srcset: /examples/gallery_examples/01_basic/images/sphx_glr_steady_state_thermal_analysis_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 607-608

Temperature on part of the body

.. GENERATED FROM PYTHON SOURCE LINES 608-613

.. code-block:: Python


    # Activate the temperature on part of the body and display the image
    app.Tree.Activate([temp_rst2])
    set_camera_and_display_image(camera, graphics, settings_720p, output_path, "part_temp_body.png")




.. image-sg:: /examples/gallery_examples/01_basic/images/sphx_glr_steady_state_thermal_analysis_004.png
   :alt: steady state thermal analysis
   :srcset: /examples/gallery_examples/01_basic/images/sphx_glr_steady_state_thermal_analysis_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 614-615

Temperature distribution along the specific path

.. GENERATED FROM PYTHON SOURCE LINES 615-622

.. code-block:: Python


    # Activate the temperature distribution along the specific path and display the image
    app.Tree.Activate([temp_rst3])
    set_camera_and_display_image(
        camera, graphics, settings_720p, output_path, "path_temp_distribution.png"
    )




.. image-sg:: /examples/gallery_examples/01_basic/images/sphx_glr_steady_state_thermal_analysis_005.png
   :alt: steady state thermal analysis
   :srcset: /examples/gallery_examples/01_basic/images/sphx_glr_steady_state_thermal_analysis_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 623-624

Temperature of bottom surface

.. GENERATED FROM PYTHON SOURCE LINES 624-631

.. code-block:: Python


    # Activate the temperature of the bottom surface and display the image
    app.Tree.Activate([temp_rst4])
    set_camera_and_display_image(
        camera, graphics, settings_720p, output_path, "bottom_surface_temp.png"
    )




.. image-sg:: /examples/gallery_examples/01_basic/images/sphx_glr_steady_state_thermal_analysis_006.png
   :alt: steady state thermal analysis
   :srcset: /examples/gallery_examples/01_basic/images/sphx_glr_steady_state_thermal_analysis_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 632-634

Export the directional heat flux animation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 637-638

Create a function to update the animation frames

.. GENERATED FROM PYTHON SOURCE LINES 638-659

.. code-block:: Python

    def update_animation(frame: int) -> list[mpimg.AxesImage]:
        """Update the animation frame for the GIF.

        Parameters
        ----------
        frame : int
            The frame number to update the animation.

        Returns
        -------
        list[mpimg.AxesImage]
            A list containing the updated image for the animation.
        """
        # Seeks to the given frame in this sequence file
        gif.seek(frame)
        # Set the image array to the current frame of the GIF
        image.set_data(gif.convert("RGBA"))
        # Return the updated image
        return [image]









.. GENERATED FROM PYTHON SOURCE LINES 660-661

Show the directional heat flux animation

.. GENERATED FROM PYTHON SOURCE LINES 661-699

.. code-block:: Python


    # Activate the directional heat flux
    app.Tree.Activate([directional_heat_flux])

    # Set the animation export format and settings
    animation_export_format = Ansys.Mechanical.DataModel.Enums.GraphicsAnimationExportFormat.GIF
    settings_720p = Ansys.Mechanical.Graphics.AnimationExportSettings()
    settings_720p.Width = 1280
    settings_720p.Height = 720

    # Export the directional heat flux animation as a GIF
    directional_heat_flux_gif = output_path / "directional_heat_flux.gif"
    directional_heat_flux.ExportAnimation(
        str(directional_heat_flux_gif), animation_export_format, settings_720p
    )

    # Open the GIF file and create an animation
    gif = Image.open(directional_heat_flux_gif)
    # Set the subplots for the animation and turn off the axis
    figure, axes = plt.subplots(figsize=(16, 9))
    axes.axis("off")
    # Change the color of the image
    image = axes.imshow(gif.convert("RGBA"))

    # Create the animation using the figure, update_animation function, and the GIF frames
    # Set the interval between frames to 200 milliseconds and repeat the animation
    ani = FuncAnimation(
        figure,
        update_animation,
        frames=range(gif.n_frames),
        interval=100,
        repeat=True,
        blit=True,
    )

    # Show the animation
    plt.show()




.. image-sg:: /examples/gallery_examples/01_basic/images/sphx_glr_steady_state_thermal_analysis_007.png
   :alt: steady state thermal analysis
   :srcset: /examples/gallery_examples/01_basic/images/sphx_glr_steady_state_thermal_analysis_007.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 700-702

Display the output file from the solve
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 702-713

.. code-block:: Python


    # Get the working directory for the steady state thermal analysis
    solve_path = stat_therm.WorkingDir
    # Get the path to the solve.out file
    solve_out_path = solve_path + "solve.out"
    # Print the output of the solve.out file if applicable
    if solve_out_path:
        with open(solve_out_path, "rt") as file:
            for line in file:
                print(line, end="")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


     Ansys Mechanical Enterprise                       


     *------------------------------------------------------------------*
     |                                                                  |
     |   W E L C O M E   T O   T H E   A N S Y S (R)  P R O G R A M     |
     |                                                                  |
     *------------------------------------------------------------------*




     ***************************************************************
     *         ANSYS MAPDL 2025 R2          LEGAL NOTICES          *
     ***************************************************************
     *                                                             *
     * Copyright 1971-2025 Ansys, Inc.  All rights reserved.       *
     * Unauthorized use, distribution or duplication is            *
     * prohibited.                                                 *
     *                                                             *
     * Ansys is a registered trademark of Ansys, Inc. or its       *
     * subsidiaries in the United States or other countries.       *
     * See the Ansys, Inc. online documentation or the Ansys, Inc. *
     * documentation CD or online help for the complete Legal      *
     * Notice.                                                     *
     *                                                             *
     ***************************************************************
     *                                                             *
     * THIS ANSYS SOFTWARE PRODUCT AND PROGRAM DOCUMENTATION       *
     * INCLUDE TRADE SECRETS AND CONFIDENTIAL AND PROPRIETARY      *
     * PRODUCTS OF ANSYS, INC., ITS SUBSIDIARIES, OR LICENSORS.    *
     * The software products and documentation are furnished by    *
     * Ansys, Inc. or its subsidiaries under a software license    *
     * agreement that contains provisions concerning               *
     * non-disclosure, copying, length and nature of use,          *
     * compliance with exporting laws, warranties, disclaimers,    *
     * limitations of liability, and remedies, and other           *
     * provisions.  The software products and documentation may be *
     * used, disclosed, transferred, or copied only in accordance  *
     * with the terms and conditions of that software license      *
     * agreement.                                                  *
     *                                                             *
     * Ansys, Inc. is a UL registered                              *
     * ISO 9001:2015 company.                                      *
     *                                                             *
     ***************************************************************
     *                                                             *
     * This product is subject to U.S. laws governing export and   *
     * re-export.                                                  *
     *                                                             *
     * For U.S. Government users, except as specifically granted   *
     * by the Ansys, Inc. software license agreement, the use,     *
     * duplication, or disclosure by the United States Government  *
     * is subject to restrictions stated in the Ansys, Inc.        *
     * software license agreement and FAR 12.212 (for non-DOD      *
     * licenses).                                                  *
     *                                                             *
     ***************************************************************

     2025 R2 
     
     Point Releases and Patches installed:   
     
     Ansys, Inc. License Manager 2025 R2 
     LS-DYNA 2025 R2 
     Core WB Files 2025 R2   
     Mechanical Products 2025 R2 


              *****  MAPDL COMMAND LINE ARGUMENTS  *****
      BATCH MODE REQUESTED (-b)    = NOLIST
      INPUT FILE COPY MODE (-c)    = COPY
      DISTRIBUTED MEMORY PARALLEL REQUESTED
           4 PARALLEL PROCESSES REQUESTED WITH SINGLE THREAD PER PROCESS
        TOTAL OF     4 CORES REQUESTED
      INPUT FILE NAME              = /github/home/.mw/Application Data/Ansys/v252/AnsysMech5D3E/Project_Mech_Files/SteadyStateThermal/dummy.dat
      OUTPUT FILE NAME             = /github/home/.mw/Application Data/Ansys/v252/AnsysMech5D3E/Project_Mech_Files/SteadyStateThermal/solve.out
      START-UP FILE MODE           = NOREAD
      STOP FILE MODE               = NOREAD

     RELEASE= 2025 R2              BUILD= 25.2      UP20250519   VERSION=LINUX x64   
     CURRENT JOBNAME=file0  19:12:36  OCT 07, 2025 CP=      0.237


     PARAMETER _DS_PROGRESS =     999.0000000    

     /INPUT FILE= ds.dat  LINE=       0



     *** NOTE ***                            CP =       0.338   TIME= 19:12:36
     The /CONFIG,NOELDB command is not valid in a distributed memory         
     parallel solution.  Command is ignored.                                 

     *GET  _WALLSTRT  FROM  ACTI  ITEM=TIME WALL  VALUE=  19.2100000    

     TITLE= 
     --Steady-State Thermal                                                        


     SET PARAMETER DIMENSIONS ON  _WB_PROJECTSCRATCH_DIR
      TYPE=STRI  DIMENSIONS=      248        1        1

     PARAMETER _WB_PROJECTSCRATCH_DIR(1) = /github/home/.mw/Application Data/Ansys/v252/AnsysMech5D3E/Project_Mech_Files/SteadyStateThermal/

     SET PARAMETER DIMENSIONS ON  _WB_SOLVERFILES_DIR
      TYPE=STRI  DIMENSIONS=      248        1        1

     PARAMETER _WB_SOLVERFILES_DIR(1) = /github/home/.mw/Application Data/Ansys/v252/AnsysMech5D3E/Project_Mech_Files/SteadyStateThermal/

     SET PARAMETER DIMENSIONS ON  _WB_USERFILES_DIR
      TYPE=STRI  DIMENSIONS=      248        1        1

     PARAMETER _WB_USERFILES_DIR(1) = /github/home/.mw/Application Data/Ansys/v252/AnsysMech5D3E/Project_Mech_Files/UserFiles/
     --- Data in consistent MKS units. See Solving Units in the help system for more

     MKS UNITS SPECIFIED FOR INTERNAL    
      LENGTH        (l)  = METER (M)
      MASS          (M)  = KILOGRAM (KG)
      TIME          (t)  = SECOND (SEC)
      TEMPERATURE   (T)  = CELSIUS (C)
      TOFFSET            = 273.0
      CHARGE        (Q)  = COULOMB
      FORCE         (f)  = NEWTON (N) (KG-M/SEC2)
      HEAT               = JOULE (N-M)

      PRESSURE           = PASCAL (NEWTON/M**2)
      ENERGY        (W)  = JOULE (N-M)
      POWER         (P)  = WATT (N-M/SEC)
      CURRENT       (i)  = AMPERE (COULOMBS/SEC)
      CAPACITANCE   (C)  = FARAD
      INDUCTANCE    (L)  = HENRY
      MAGNETIC FLUX      = WEBER
      RESISTANCE    (R)  = OHM
      ELECTRIC POTENTIAL = VOLT

     INPUT  UNITS ARE ALSO SET TO MKS 

     *** MAPDL - ENGINEERING ANALYSIS SYSTEM  RELEASE 2025 R2          25.2     ***
     Ansys Mechanical Enterprise                       
     00000000  VERSION=LINUX x64     19:12:36  OCT 07, 2025 CP=      0.342

     --Steady-State Thermal                                                        



              ***** MAPDL ANALYSIS DEFINITION (PREP7) *****
     *********** Send User Defined Coordinate System(s) ***********
     *********** Nodes for the whole assembly ***********
     *********** Elements for Body 1 'Part4' ***********
     *********** Elements for Body 2 'Part3' ***********
     *********** Elements for Body 3 'Part2' ***********
     *********** Elements for Body 4 'Part1' ***********
     *********** Send Materials ***********
     *********** Create Contact "Contact Region" ***********
                 Real Constant Set For Above Contact Is 6 & 5
     *********** Create Contact "Contact Region 2" ***********
                 Real Constant Set For Above Contact Is 8 & 7
     *********** Create Contact "Contact Region 3" ***********
                 Real Constant Set For Above Contact Is 10 & 9
     *********** Send Named Selection as Node Component ***********
     *********** Send Named Selection as Node Component ***********
     *********** Send Named Selection as Node Component ***********
     *********** Send Named Selection as Node Component ***********
     *********** Define Temperature Constraint ***********
     *********** Define Temperature Constraint ***********
     *********** Create "ToSurface(Open)" Radiation ***********
     ***************** Define Uniform Initial temperature ***************


     ***** ROUTINE COMPLETED *****  CP =         0.402


     --- Number of total nodes = 3566
     --- Number of contact elements = 200
     --- Number of spring elements = 0
     --- Number of bearing elements = 0
     --- Number of solid elements = 586
     --- Number of condensed parts = 0
     --- Number of total elements = 786

     *GET  _WALLBSOL  FROM  ACTI  ITEM=TIME WALL  VALUE=  19.2100000    
     ****************************************************************************
     *************************    SOLUTION       ********************************
     ****************************************************************************

     *****  MAPDL SOLUTION ROUTINE  *****


     PERFORM A STATIC ANALYSIS
      THIS WILL BE A NEW ANALYSIS

     CONTACT INFORMATION PRINTOUT LEVEL       1

     CHECK INITIAL OPEN/CLOSED STATUS OF SELECTED CONTACT ELEMENTS
          AND LIST DETAILED CONTACT PAIR INFORMATION

     SPLIT CONTACT SURFACES AT SOLVE PHASE

        NUMBER OF SPLITTING TBD BY PROGRAM

     DO NOT SAVE ANY RESTART FILES AT ALL

     DO NOT COMBINE ELEMENT MATRIX FILES (.emat) AFTER DISTRIBUTED PARALLEL SOLUTION

     DO NOT COMBINE ELEMENT SAVE DATA FILES (.esav) AFTER DISTRIBUTED PARALLEL SOLUTION
     ****************************************************
     ******************* SOLVE FOR LS 1 OF 2 ****************

     SPECIFIED CONSTRAINT TEMP FOR PICKED NODES 
     SET ACCORDING TO TABLE PARAMETER = _LOADVARI63

     SPECIFIED CONSTRAINT TEMP FOR PICKED NODES 
     SET ACCORDING TO TABLE PARAMETER = _LOADVARI65

     SPECIFIED SURFACE LOAD RDSF FOR ALL PICKED ELEMENTS  LKEY = 6   KVAL = 1
         VALUES =     1.0000         1.0000         1.0000         1.0000    

     SPECIFIED SURFACE LOAD RDSF FOR ALL PICKED ELEMENTS  LKEY = 6   KVAL = 2
         VALUES =     1.0000         1.0000         1.0000         1.0000    

     ALL SELECT   FOR ITEM=NODE COMPONENT=    
      IN RANGE         1 TO       3566 STEP          1

           3566  NODES (OF       3566  DEFINED) SELECTED BY NSEL  COMMAND.

     ALL SELECT   FOR ITEM=ELEM COMPONENT=    
      IN RANGE         1 TO       1504 STEP          1

            786  ELEMENTS (OF        786  DEFINED) SELECTED BY  ESEL  COMMAND.

     SPECIFIED CONSTRAINT TEMP FOR PICKED NODES 
     SET ACCORDING TO TABLE PARAMETER = _LOADVARI67

     ALL SELECT   FOR ITEM=NODE COMPONENT=    
      IN RANGE         1 TO       3566 STEP          1

           3566  NODES (OF       3566  DEFINED) SELECTED BY NSEL  COMMAND.

     ALL SELECT   FOR ITEM=ELEM COMPONENT=    
      IN RANGE         1 TO       1504 STEP          1

            786  ELEMENTS (OF        786  DEFINED) SELECTED BY  ESEL  COMMAND.

     PRINTOUT RESUMED BY /GOP

     USE AUTOMATIC TIME STEPPING THIS LOAD STEP

     USE       1 SUBSTEPS INITIALLY THIS LOAD STEP FOR ALL  DEGREES OF FREEDOM
     FOR AUTOMATIC TIME STEPPING:
       USE     10 SUBSTEPS AS A MAXIMUM
       USE      1 SUBSTEPS AS A MINIMUM

     TIME=  1.0000    

     ERASE THE CURRENT DATABASE OUTPUT CONTROL TABLE.


     WRITE ALL  ITEMS TO THE DATABASE WITH A FREQUENCY OF NONE
       FOR ALL APPLICABLE ENTITIES

     WRITE NSOL ITEMS TO THE DATABASE WITH A FREQUENCY OF ALL 
       FOR ALL APPLICABLE ENTITIES

     WRITE RSOL ITEMS TO THE DATABASE WITH A FREQUENCY OF ALL 
       FOR ALL APPLICABLE ENTITIES

     WRITE EANG ITEMS TO THE DATABASE WITH A FREQUENCY OF ALL 
       FOR ALL APPLICABLE ENTITIES

     WRITE VENG ITEMS TO THE DATABASE WITH A FREQUENCY OF ALL 
       FOR ALL APPLICABLE ENTITIES

     WRITE FFLU ITEMS TO THE DATABASE WITH A FREQUENCY OF ALL 
       FOR ALL APPLICABLE ENTITIES

     WRITE CONT ITEMS TO THE DATABASE WITH A FREQUENCY OF ALL 
       FOR ALL APPLICABLE ENTITIES

     WRITE NLOA ITEMS TO THE DATABASE WITH A FREQUENCY OF ALL 
       FOR ALL APPLICABLE ENTITIES

     WRITE MISC ITEMS TO THE DATABASE WITH A FREQUENCY OF ALL 
       FOR ALL APPLICABLE ENTITIES

     CONVERGENCE ON HEAT BASED ON THE NORM OF THE N-R LOAD
       WITH A TOLERANCE OF 0.1000E-03 AND A MINIMUM REFERENCE VALUE OF 0.1000E-05
       USING THE L2 NORM (CHECK THE SRSS VALUE)

     UNDER RELAXATION FOR RADIATION FLUX=   0.10000

     TOLERENCE FOR RADIOSITY FLUX=   0.00010

     USING JACOBI ITERATIVE SOLVER FOR RADIOSITY SOLUTION
     FOR 3D ENCLOSURES.
     USING GSEIDEL ITERATIVE SOLVER FOR RADIOSITY SOLUTION
     FOR 2D ENCLOSURES.

     MAXIMUM NUMBER OF ITERATIONS=  1000
     TOLERENCE FOR ITERATIVE SOLVER=   0.10000
     RELAXATION FOR ITERATIVE SOLVER=   0.10000

     HEMICUBE RESOLUTION=   10

     MIN NORMALIZED DIST BEFORE AUTO SUBDIVIDE= 1.000000000E-06

     SELECT      COMPONENT _CM67                                                                                                                                                                                                                                                           

     SELECT      ALL ELEMENTS HAVING ANY NODE IN NODAL SET.

            110 ELEMENTS (OF        786  DEFINED) SELECTED FROM
          310 SELECTED NODES BY  ESLN COMMAND.

    BEFORE SYMMETRIZATION:

    NUMBER OF RADIATION NODES CREATED =        115

    NUMBER OF RADIOSITY SURFACE ELEMENTS CREATED =         82

    AFTER SYMMETRIZATION:

    FULL NUMBER OF RADIATION NODES CREATED =        115

    FULL NUMBER OF RADIOSITY SURFACE ELEMENTS CREATED =        82

     ALL SELECT   FOR ITEM=NODE COMPONENT=    
      IN RANGE         1 TO       3681 STEP          1

           3681  NODES (OF       3681  DEFINED) SELECTED BY NSEL  COMMAND.

     ALL SELECT   FOR ITEM=ELEM COMPONENT=    
      IN RANGE         1 TO       1586 STEP          1

            868  ELEMENTS (OF        868  DEFINED) SELECTED BY  ESEL  COMMAND.

     *GET  ANSINTER_  FROM  ACTI  ITEM=INT        VALUE=  0.00000000    

     *IF  ANSINTER_  ( =   0.00000     )  NE  
          0  ( =   0.00000     )  THEN    

     *ENDIF

     *** NOTE ***                            CP =       0.473   TIME= 19:12:36
     The automatic domain decomposition logic has selected the MESH domain   
     decomposition method with 4 processes per solution.                     

     *****  MAPDL SOLVE    COMMAND  *****

     CALCULATING VIEW FACTORS USING HEMICUBE METHOD

     RETRIEVED    1 ENCLOSURES.
     TOTAL OF       82 DEFINED ELEMENT FACES.

     # ENCLOSURE =     1 # SURFACES =    82 # NODES =   115

    TIME OF CALCULATION FOR THIS ENCLOSURE =   0.708210E-01

     CHECKING VIEW FACTOR SUM

     *** NOTE ***                            CP =       0.574   TIME= 19:12:36
     Some of the rows in the viewfactor matrix have all zeros for enclosure  
     1.                                                                      

     VIEW FACTOR CALCULATION COMPLETE

     WRITING VIEW FACTORS TO FILE file0.vf                                                                                                                                                                                                                                                            
     VIEW FACTORS WERE WRITTEN TO FILE file0.vf                                                                                                                                                                                                                                                            

     *** WARNING ***                         CP =       0.580   TIME= 19:12:36
     Element shape checking is currently inactive.  Issue SHPP,ON or         
     SHPP,WARN to reactivate, if desired.                                    

     *** NOTE ***                            CP =       0.590   TIME= 19:12:36
     The model data was checked and warning messages were found.             
      Please review output or errors file ( /github/home/.mw/Application     
     Data/Ansys/v252/AnsysMech5D3E/Project_Mech_Files/SteadyStateThermal/fil 
     le0.err ) for these warning messages.                                   

     *** MAPDL - ENGINEERING ANALYSIS SYSTEM  RELEASE 2025 R2          25.2     ***
     Ansys Mechanical Enterprise                       
     00000000  VERSION=LINUX x64     19:12:36  OCT 07, 2025 CP=      0.591

     --Steady-State Thermal                                                        



                           S O L U T I O N   O P T I O N S

       PROBLEM DIMENSIONALITY. . . . . . . . . . . . .3-D                  
       DEGREES OF FREEDOM. . . . . . TEMP
       ANALYSIS TYPE . . . . . . . . . . . . . . . . .STATIC (STEADY-STATE)
       OFFSET TEMPERATURE FROM ABSOLUTE ZERO . . . . .  273.15    
       GLOBALLY ASSEMBLED MATRIX . . . . . . . . . . .SYMMETRIC  

     *** NOTE ***                            CP =       0.599   TIME= 19:12:36
     This nonlinear analysis defaults to using the full Newton-Raphson       
     solution procedure.  This can be modified using the NROPT command.      

     *** NOTE ***                            CP =       0.599   TIME= 19:12:36
     The conditions for direct assembly have been met.  No .emat or .erot    
     files will be produced.                                                 

     TRIM CONTACT/TARGET SURFACE
     START TRIMMING SMALL/BONDED CONTACT PAIRS FOR DMP RUN.                  

          34 CONTACT ELEMENTS &      66 TARGET ELEMENTS ARE DELETED DUE TO TRIMMING LOGIC.
           3 CONTACT PAIRS ARE REMOVED. 

     CHECK INITIAL OPEN/CLOSED STATUS OF SELECTED CONTACT ELEMENTS
          AND LIST DETAILED CONTACT PAIR INFORMATION

     *** NOTE ***                            CP =       0.709   TIME= 19:12:36
     The maximum number of contact elements in any single contact pair is    
     smaller than the optimal domain size of elements for the given number   
     of CPU domain.  Therefore, no contact pairs are being split by the      
     contact split logic.                                                    

     *** NOTE ***                            CP =       0.711   TIME= 19:12:36
     The maximum number of contact elements in any single contact pair is    
     25, which is smaller than the optimal domain size of 120 elements for   
     the given number of CPU domains (4).  Therefore, no contact pairs are   
     being split by the CNCH,DMP logic.                                      

     *** NOTE ***                            CP =       0.754   TIME= 19:12:36
     Deformable-deformable contact pair identified by real constant set 5    
     and contact element type 5 has been set up.                             
     Pure thermal contact is activated.
     The emissivity is defined through the material property.
     Thermal convection coefficient, environment temperature, and
      heat flux are defined using the SFE command.
     Target temperature is used for convection/radiation calculation
      for near field contact.
     Small sliding logic is assumed
     Contact detection at: Gauss integration point
     Average contact surface length               0.40000    
     Average contact pair depth                   0.42857    
     Average target surface length                0.66667    
     Default pinball region factor PINB           0.25000    
     The resulting pinball region                 0.10714    
     Initial penetration/gap is excluded.
     Bonded contact (always) is defined.
     Thermal contact conductance coef. TCC         29952.    
     Heat radiation is excluded.

     *** NOTE ***                            CP =       0.754   TIME= 19:12:36
     Max.  Initial penetration 3.552713679E-15 was detected between contact  
     element 1331 and target element 1366.                                   
     ****************************************
  

     *** NOTE ***                            CP =       0.755   TIME= 19:12:36
     Deformable-deformable contact pair identified by real constant set 8    
     and contact element type 7 has been set up.                             
     Pure thermal contact is activated.
     The emissivity is defined through the material property.
     Thermal convection coefficient, environment temperature, and
      heat flux are defined using the SFE command.
     Target temperature is used for convection/radiation calculation
      for near field contact.
     Small sliding logic is assumed
     Contact detection at: Gauss integration point
     Average contact surface length               0.50000    
     Average contact pair depth                   0.50000    
     Average target surface length                0.66667    
     Default pinball region factor PINB           0.25000    
     The resulting pinball region                 0.12500    
     Initial penetration/gap is excluded.
     Bonded contact (always) is defined.
     Thermal contact conductance coef. TCC         29952.    
     Heat radiation is excluded.

     *** NOTE ***                            CP =       0.755   TIME= 19:12:36
     Max.  Initial penetration 1.776356839E-15 was detected between contact  
     element 1395 and target element 1375.                                   
     ****************************************
  

     *** NOTE ***                            CP =       0.755   TIME= 19:12:36
     Deformable-deformable contact pair identified by real constant set 10   
     and contact element type 9 has been set up.                             
     Pure thermal contact is activated.
     The emissivity is defined through the material property.
     Thermal convection coefficient, environment temperature, and
      heat flux are defined using the SFE command.
     Target temperature is used for convection/radiation calculation
      for near field contact.
     Small sliding logic is assumed
     Contact detection at: Gauss integration point
     Average contact surface length               0.40000    
     Average contact pair depth                   0.40000    
     Average target surface length                0.50000    
     Default pinball region factor PINB           0.25000    
     The resulting pinball region                 0.10000    
     Initial penetration/gap is excluded.
     Bonded contact (always) is defined.
     Thermal contact conductance coef. TCC         29952.    
     Heat radiation is excluded.

     *** NOTE ***                            CP =       0.755   TIME= 19:12:36
     Max.  Initial penetration 4.440892099E-16 was detected between contact  
     element 1455 and target element 1426.                                   
     ****************************************
  
  
  

  
  
         D I S T R I B U T E D   D O M A I N   D E C O M P O S E R
  
      ...Number of elements: 768
      ...Number of nodes:    3681
      ...Decompose to 4 CPU domains
      ...Element load balance ratio =     1.092


                          L O A D   S T E P   O P T I O N S

       LOAD STEP NUMBER. . . . . . . . . . . . . . . .     1
       TIME AT END OF THE LOAD STEP. . . . . . . . . .  1.0000    
       AUTOMATIC TIME STEPPING . . . . . . . . . . . .    ON
          INITIAL NUMBER OF SUBSTEPS . . . . . . . . .     1
          MAXIMUM NUMBER OF SUBSTEPS . . . . . . . . .    10
          MINIMUM NUMBER OF SUBSTEPS . . . . . . . . .     1
       MAXIMUM NUMBER OF EQUILIBRIUM ITERATIONS. . . .    15
       STEP CHANGE BOUNDARY CONDITIONS . . . . . . . .    NO
       TERMINATE ANALYSIS IF NOT CONVERGED . . . . . .YES (EXIT)  
       CONVERGENCE CONTROLS
          LABEL   REFERENCE    TOLERANCE  NORM     MINREF
           HEAT    0.000       0.1000E-03   2     0.1000E-05
       PRINT OUTPUT CONTROLS . . . . . . . . . . . . .NO PRINTOUT
       DATABASE OUTPUT CONTROLS
          ITEM     FREQUENCY   COMPONENT
           ALL       NONE               
          NSOL        ALL               
          RSOL        ALL               
          EANG        ALL               
          VENG        ALL               
          FFLU        ALL               
          CONT        ALL               
          NLOA        ALL               
          MISC        ALL               


     SOLUTION MONITORING INFO IS WRITTEN TO FILE= file.mntr                                                                                                                                                                                                                                                           
     MAXIMUM NUMBER OF EQUILIBRIUM ITERATIONS HAS BEEN MODIFIED              
      TO BE, NEQIT = 1000, BY SOLUTION CONTROL LOGIC.                        

     RADIOSITY SOLVER CALCULATION
     ENCLOSURE NUMBER=   1
     RADIOSITY SOLVER CONVERGED AFTER   59 ITERATIONS
     TIME OF RADIOSITY SOLVER FOR ENCLOSURE=  0.297606E-02
     RAD FLUX CONVERGENCE VALUE=   1.00000     CRITERION=  0.100000E-03





                **** CENTER OF MASS, MASS, AND MASS MOMENTS OF INERTIA ****

      CALCULATIONS ASSUME ELEMENT MASS AT ELEMENT CENTROID

      TOTAL MASS =  0.62800E+06

                               MOM. OF INERTIA         MOM. OF INERTIA
      CENTER OF MASS            ABOUT ORIGIN        ABOUT CENTER OF MASS

      XC =   1.0000          IXX =   0.8453E+08      IXX =   0.2111E+08
      YC =   1.0000          IYY =   0.8453E+08      IYY =   0.2111E+08
      ZC =   10.000          IZZ =   0.1641E+07      IZZ =   0.3847E+06
                             IXY =  -0.6280E+06      IXY =  -0.1164E-09
                             IYZ =  -0.6280E+07      IYZ =  -0.1256E-03
                             IZX =  -0.6280E+07      IZX =  -0.1256E-03


      *** MASS SUMMARY BY ELEMENT TYPE ***

      TYPE      MASS
         1   94200.0    
         2   314000.    
         3   157000.    
         4   62800.0    

     Range of element maximum matrix coefficients in global coordinates
     Maximum = 2872.34701 at element 1392.                                   
     Minimum = 23.5644444 at element 562.                                    

       *** ELEMENT MATRIX FORMULATION TIMES
         TYPE    NUMBER   ENAME      TOTAL CP  AVE CP

            1       175  SOLID279      0.016   0.000093
            2       126  SOLID279      0.039   0.000310
            3       160  SOLID279      0.009   0.000056
            4       125  SOLID279      0.008   0.000060
            5        25  CONTA174      0.007   0.000261
            6         9  TARGE170      0.000   0.000005
            7        16  CONTA174      0.003   0.000219
            8         9  TARGE170      0.000   0.000005
            9        25  CONTA174      0.005   0.000211
           10        16  TARGE170      0.000   0.000004
           11        82  SURF252       0.001   0.000016
     Time at end of element matrix formulation CP = 1.31296504.              
         HT FLOW CONVERGENCE VALUE=  0.1041E+05  CRITERION=   1.043    

     DISTRIBUTED SPARSE MATRIX DIRECT SOLVER.
      Number of equations =        3373,    Maximum wavefront =    114


      Memory allocated on only this MPI rank (rank     0)
      -------------------------------------------------------------------
      Equation solver memory allocated                     =     2.298 MB
      Equation solver memory required for in-core mode     =     2.213 MB
      Equation solver memory required for out-of-core mode =     1.694 MB
      Total (solver and non-solver) memory allocated       =   526.416 MB


      Total memory summed across all MPI ranks on this machines
      -------------------------------------------------------------------
      Equation solver memory allocated                     =     8.421 MB
      Equation solver memory required for in-core mode     =     8.103 MB
      Equation solver memory required for out-of-core mode =     6.122 MB
      Total (solver and non-solver) memory allocated       =  1262.022 MB

     *** NOTE ***                            CP =       1.412   TIME= 19:12:37
     The Distributed Sparse Matrix Solver is currently running in the        
     in-core memory mode.  This memory mode uses the most amount of memory   
     in order to avoid using the hard drive as much as possible, which most  
     often results in the fastest solution time.  This mode is recommended   
     if enough physical memory is present to accommodate all of the solver   
     data.                                                                   
     Distributed sparse solver maximum pivot= 2717.07614 at node 1844 TEMP.  
     Distributed sparse solver minimum pivot= 14.7755695 at node 2950 TEMP.  
     Distributed sparse solver minimum pivot in absolute value= 14.7755695   
     at node 2950 TEMP.                                                      
        EQUIL ITER   1 COMPLETED.  NEW TRIANG MATRIX.  MAX DOF INC=   28.00    
         HT FLOW CONVERGENCE VALUE=  0.6515E-09  CRITERION=  0.6227E-01 <<< CONVERGED
        >>> SOLUTION CONVERGED AFTER EQUILIBRIUM ITERATION   1

     RADIOSITY SOLVER CALCULATION
     ENCLOSURE NUMBER=   1
     RADIOSITY SOLVER CONVERGED AFTER   48 ITERATIONS
     TIME OF RADIOSITY SOLVER FOR ENCLOSURE=  0.659943E-03
     RAD FLUX CONVERGENCE VALUE=  0.164309     CRITERION=  0.100000E-03

         HT FLOW CONVERGENCE VALUE=   4.683      CRITERION=  0.6197E-01
        EQUIL ITER   2 COMPLETED.  NEW TRIANG MATRIX.  MAX DOF INC= -0.1700    
         HT FLOW CONVERGENCE VALUE=  0.8699E-09  CRITERION=  0.6203E-01 <<< CONVERGED
        >>> SOLUTION CONVERGED AFTER EQUILIBRIUM ITERATION   2

     RADIOSITY SOLVER CALCULATION
     ENCLOSURE NUMBER=   1
     RADIOSITY SOLVER CONVERGED AFTER    1 ITERATIONS
     TIME OF RADIOSITY SOLVER FOR ENCLOSURE=  0.600815E-04
     RAD FLUX CONVERGENCE VALUE=  0.596247E-04 CRITERION=  0.100000E-03

     RADIOSITY FLUX CONVERGED AFTER ITERATION=    3 SUBSTEP=    1

         HT FLOW CONVERGENCE VALUE=   1.620      CRITERION=  0.6314E-01
        EQUIL ITER   3 COMPLETED.  NEW TRIANG MATRIX.  MAX DOF INC= -0.6831E-01
         HT FLOW CONVERGENCE VALUE=  0.8196E-09  CRITERION=  0.6316E-01 <<< CONVERGED
        >>> SOLUTION CONVERGED AFTER EQUILIBRIUM ITERATION   3

       *** ELEMENT RESULT CALCULATION TIMES
         TYPE    NUMBER   ENAME      TOTAL CP  AVE CP

            1       175  SOLID279      0.004   0.000024
            2       126  SOLID279      0.003   0.000026
            3       160  SOLID279      0.004   0.000025
            4       125  SOLID279      0.003   0.000025
            5        25  CONTA174      0.002   0.000061
            7        16  CONTA174      0.001   0.000059
            9        25  CONTA174      0.002   0.000062
           11        82  SURF252       0.001   0.000010

       *** NODAL LOAD CALCULATION TIMES
         TYPE    NUMBER   ENAME      TOTAL CP  AVE CP

            1       175  SOLID279      0.003   0.000015
            2       126  SOLID279      0.002   0.000015
            3       160  SOLID279      0.002   0.000015
            4       125  SOLID279      0.002   0.000016
            5        25  CONTA174      0.000   0.000006
            7        16  CONTA174      0.000   0.000005
            9        25  CONTA174      0.000   0.000006
           11        82  SURF252       0.000   0.000004
     *** LOAD STEP     1   SUBSTEP     1  COMPLETED.    CUM ITER =      3
     *** TIME =   1.00000         TIME INC =   1.00000    


     *** MAPDL BINARY FILE STATISTICS
      BUFFER SIZE USED= 16384
            0.125 MB WRITTEN ON ELEMENT SAVED DATA FILE: file0.esav
            0.500 MB WRITTEN ON ASSEMBLED MATRIX FILE: file0.full
            0.500 MB WRITTEN ON RESULTS FILE: file0.rth
     *************** Write FE CONNECTORS *********

     WRITE OUT CONSTRAINT EQUATIONS TO FILE= file.ce                                                                                                                                                                                                                                                             
     ****************************************************
     *************** FINISHED SOLVE FOR LS 1 *************
     ****************************************************
     ******************* SOLVE FOR LS 2 OF 2 ****************

     PRINTOUT RESUMED BY /GOP

     USE AUTOMATIC TIME STEPPING THIS LOAD STEP

     USE       1 SUBSTEPS INITIALLY THIS LOAD STEP FOR ALL  DEGREES OF FREEDOM
     FOR AUTOMATIC TIME STEPPING:
       USE     10 SUBSTEPS AS A MAXIMUM
       USE      1 SUBSTEPS AS A MINIMUM

     TIME=  2.0000    

     ERASE THE CURRENT DATABASE OUTPUT CONTROL TABLE.


     WRITE ALL  ITEMS TO THE DATABASE WITH A FREQUENCY OF NONE
       FOR ALL APPLICABLE ENTITIES

     WRITE NSOL ITEMS TO THE DATABASE WITH A FREQUENCY OF ALL 
       FOR ALL APPLICABLE ENTITIES

     WRITE RSOL ITEMS TO THE DATABASE WITH A FREQUENCY OF ALL 
       FOR ALL APPLICABLE ENTITIES

     WRITE EANG ITEMS TO THE DATABASE WITH A FREQUENCY OF ALL 
       FOR ALL APPLICABLE ENTITIES

     WRITE VENG ITEMS TO THE DATABASE WITH A FREQUENCY OF ALL 
       FOR ALL APPLICABLE ENTITIES

     WRITE FFLU ITEMS TO THE DATABASE WITH A FREQUENCY OF ALL 
       FOR ALL APPLICABLE ENTITIES

     WRITE CONT ITEMS TO THE DATABASE WITH A FREQUENCY OF ALL 
       FOR ALL APPLICABLE ENTITIES

     WRITE NLOA ITEMS TO THE DATABASE WITH A FREQUENCY OF ALL 
       FOR ALL APPLICABLE ENTITIES

     WRITE MISC ITEMS TO THE DATABASE WITH A FREQUENCY OF ALL 
       FOR ALL APPLICABLE ENTITIES

     CONVERGENCE ON HEAT BASED ON THE NORM OF THE N-R LOAD
       WITH A TOLERANCE OF 0.1000E-03 AND A MINIMUM REFERENCE VALUE OF 0.1000E-05
       USING THE L2 NORM (CHECK THE SRSS VALUE)

     UNDER RELAXATION FOR RADIATION FLUX=   0.10000

     TOLERENCE FOR RADIOSITY FLUX=   0.00010

     USING JACOBI ITERATIVE SOLVER FOR RADIOSITY SOLUTION
     FOR 3D ENCLOSURES.
     USING GSEIDEL ITERATIVE SOLVER FOR RADIOSITY SOLUTION
     FOR 2D ENCLOSURES.

     MAXIMUM NUMBER OF ITERATIONS=  1000
     TOLERENCE FOR ITERATIVE SOLVER=   0.10000
     RELAXATION FOR ITERATIVE SOLVER=   0.10000

     HEMICUBE RESOLUTION=   10

     MIN NORMALIZED DIST BEFORE AUTO SUBDIVIDE= 1.000000000E-06

     *****  MAPDL SOLVE    COMMAND  *****

     *** NOTE ***                            CP =       1.592   TIME= 19:12:37
     This nonlinear analysis defaults to using the full Newton-Raphson       
     solution procedure.  This can be modified using the NROPT command.      

     *** MAPDL - ENGINEERING ANALYSIS SYSTEM  RELEASE 2025 R2          25.2     ***
     Ansys Mechanical Enterprise                       
     00000000  VERSION=LINUX x64     19:12:37  OCT 07, 2025 CP=      1.625

     --Steady-State Thermal                                                        



                          L O A D   S T E P   O P T I O N S

       LOAD STEP NUMBER. . . . . . . . . . . . . . . .     2
       TIME AT END OF THE LOAD STEP. . . . . . . . . .  2.0000    
       AUTOMATIC TIME STEPPING . . . . . . . . . . . .    ON
          INITIAL NUMBER OF SUBSTEPS . . . . . . . . .     1
          MAXIMUM NUMBER OF SUBSTEPS . . . . . . . . .    10
          MINIMUM NUMBER OF SUBSTEPS . . . . . . . . .     1
       MAXIMUM NUMBER OF EQUILIBRIUM ITERATIONS. . . .    15
       STEP CHANGE BOUNDARY CONDITIONS . . . . . . . .    NO
       TERMINATE ANALYSIS IF NOT CONVERGED . . . . . .YES (EXIT)  
       CONVERGENCE CONTROLS
          LABEL   REFERENCE    TOLERANCE  NORM     MINREF
           HEAT    0.000       0.1000E-03   2     0.1000E-05
       PRINT OUTPUT CONTROLS . . . . . . . . . . . . .NO PRINTOUT
       DATABASE OUTPUT CONTROLS
          ITEM     FREQUENCY   COMPONENT
           ALL       NONE               
          NSOL        ALL               
          RSOL        ALL               
          EANG        ALL               
          VENG        ALL               
          FFLU        ALL               
          CONT        ALL               
          NLOA        ALL               
          MISC        ALL               


     SOLUTION MONITORING INFO IS WRITTEN TO FILE= file.mntr                                                                                                                                                                                                                                                           
     MAXIMUM NUMBER OF EQUILIBRIUM ITERATIONS HAS BEEN MODIFIED              
      TO BE, NEQIT = 1000, BY SOLUTION CONTROL LOGIC.                        

     RADIOSITY SOLVER CALCULATION
     ENCLOSURE NUMBER=   1
     RADIOSITY SOLVER CONVERGED AFTER    1 ITERATIONS
     TIME OF RADIOSITY SOLVER FOR ENCLOSURE=  0.215054E-03
     RAD FLUX CONVERGENCE VALUE=  0.108870E-03 CRITERION=  0.100000E-03


         HT FLOW CONVERGENCE VALUE=  0.1129E+05  CRITERION=   1.132    
        EQUIL ITER   1 COMPLETED.  NEW TRIANG MATRIX.  MAX DOF INC=   30.00    
         HT FLOW CONVERGENCE VALUE=  0.1062E-08  CRITERION=  0.9169E-01 <<< CONVERGED
        >>> SOLUTION CONVERGED AFTER EQUILIBRIUM ITERATION   1

     RADIOSITY SOLVER CALCULATION
     ENCLOSURE NUMBER=   1
     RADIOSITY SOLVER CONVERGED AFTER   51 ITERATIONS
     TIME OF RADIOSITY SOLVER FOR ENCLOSURE=  0.264502E-02
     RAD FLUX CONVERGENCE VALUE=  0.176949     CRITERION=  0.100000E-03

         HT FLOW CONVERGENCE VALUE=   31.78      CRITERION=  0.9632E-01
        EQUIL ITER   2 COMPLETED.  NEW TRIANG MATRIX.  MAX DOF INC=  -1.134    
         HT FLOW CONVERGENCE VALUE=  0.1043E-08  CRITERION=  0.9668E-01 <<< CONVERGED
        >>> SOLUTION CONVERGED AFTER EQUILIBRIUM ITERATION   2

     RADIOSITY SOLVER CALCULATION
     ENCLOSURE NUMBER=   1
     RADIOSITY SOLVER CONVERGED AFTER   21 ITERATIONS
     TIME OF RADIOSITY SOLVER FOR ENCLOSURE=  0.115490E-02
     RAD FLUX CONVERGENCE VALUE=  0.665886E-02 CRITERION=  0.100000E-03

         HT FLOW CONVERGENCE VALUE=   1.853      CRITERION=  0.9890E-01
        EQUIL ITER   3 COMPLETED.  NEW TRIANG MATRIX.  MAX DOF INC= -0.6860E-01
         HT FLOW CONVERGENCE VALUE=  0.1040E-08  CRITERION=  0.9893E-01 <<< CONVERGED
        >>> SOLUTION CONVERGED AFTER EQUILIBRIUM ITERATION   3

     RADIOSITY SOLVER CALCULATION
     ENCLOSURE NUMBER=   1
     RADIOSITY SOLVER CONVERGED AFTER    4 ITERATIONS
     TIME OF RADIOSITY SOLVER FOR ENCLOSURE=  0.374079E-03
     RAD FLUX CONVERGENCE VALUE=  0.506736E-03 CRITERION=  0.100000E-03

         HT FLOW CONVERGENCE VALUE=  0.5470      CRITERION=  0.9983E-01
        EQUIL ITER   4 COMPLETED.  NEW TRIANG MATRIX.  MAX DOF INC= -0.1926E-01
         HT FLOW CONVERGENCE VALUE=  0.1183E-08  CRITERION=  0.9983E-01 <<< CONVERGED
        >>> SOLUTION CONVERGED AFTER EQUILIBRIUM ITERATION   4

     RADIOSITY SOLVER CALCULATION
     ENCLOSURE NUMBER=   1
     RADIOSITY SOLVER CONVERGED AFTER    1 ITERATIONS
     TIME OF RADIOSITY SOLVER FOR ENCLOSURE=  0.498295E-04
     RAD FLUX CONVERGENCE VALUE=  0.109888E-03 CRITERION=  0.100000E-03

         HT FLOW CONVERGENCE VALUE=  0.2185      CRITERION=  0.1002    
        EQUIL ITER   5 COMPLETED.  NEW TRIANG MATRIX.  MAX DOF INC= -0.7222E-02
         HT FLOW CONVERGENCE VALUE=  0.1056E-08  CRITERION=  0.1002     <<< CONVERGED
        >>> SOLUTION CONVERGED AFTER EQUILIBRIUM ITERATION   5

     RADIOSITY SOLVER CALCULATION
     ENCLOSURE NUMBER=   1
     RADIOSITY SOLVER CONVERGED AFTER    1 ITERATIONS
     TIME OF RADIOSITY SOLVER FOR ENCLOSURE=  0.441074E-04
     RAD FLUX CONVERGENCE VALUE=  0.102317E-03 CRITERION=  0.100000E-03

         HT FLOW CONVERGENCE VALUE=  0.1112      CRITERION=  0.1002    
        EQUIL ITER   6 COMPLETED.  NEW TRIANG MATRIX.  MAX DOF INC=  0.4308E-02
         HT FLOW CONVERGENCE VALUE=  0.1050E-08  CRITERION=  0.1002     <<< CONVERGED
        >>> SOLUTION CONVERGED AFTER EQUILIBRIUM ITERATION   6

     RADIOSITY SOLVER CALCULATION
     ENCLOSURE NUMBER=   1
     RADIOSITY SOLVER CONVERGED AFTER    1 ITERATIONS
     TIME OF RADIOSITY SOLVER FOR ENCLOSURE=  0.450611E-04
     RAD FLUX CONVERGENCE VALUE=  0.884660E-04 CRITERION=  0.100000E-03

     RADIOSITY FLUX CONVERGED AFTER ITERATION=    7 SUBSTEP=    1

         HT FLOW CONVERGENCE VALUE=  0.2106      CRITERION=  0.1000    
        EQUIL ITER   7 COMPLETED.  NEW TRIANG MATRIX.  MAX DOF INC=  0.8012E-02
         HT FLOW CONVERGENCE VALUE=  0.1202E-08  CRITERION=  0.1000     <<< CONVERGED
        >>> SOLUTION CONVERGED AFTER EQUILIBRIUM ITERATION   7
     *** LOAD STEP     2   SUBSTEP     1  COMPLETED.    CUM ITER =     10
     *** TIME =   2.00000         TIME INC =   1.00000    
     ****************************************************
     *************** FINISHED SOLVE FOR LS 2 *************

     *GET  _WALLASOL  FROM  ACTI  ITEM=TIME WALL  VALUE=  19.2102778    

     FINISH SOLUTION PROCESSING


     ***** ROUTINE COMPLETED *****  CP =         2.523



     *** MAPDL - ENGINEERING ANALYSIS SYSTEM  RELEASE 2025 R2          25.2     ***
     Ansys Mechanical Enterprise                       
     00000000  VERSION=LINUX x64     19:12:37  OCT 07, 2025 CP=      2.524

     --Steady-State Thermal                                                        



              ***** MAPDL RESULTS INTERPRETATION (POST1) *****

     *** NOTE ***                            CP =       2.525   TIME= 19:12:37
     Reading results into the database (SET command) will update the current 
     displacement and force boundary conditions in the database with the     
     values from the results file for that load set.  Note that any          
     subsequent solutions will use these values unless action is taken to    
     either SAVE the current values or not overwrite them (/EXIT,NOSAVE).    

     Set Encoding of XML File to:ISO-8859-1

     Set Output of XML File to:
         PARM,     ,     ,     ,     ,     ,     ,     ,     ,     ,     ,     ,
             ,     ,     ,     ,     ,     ,     ,

     DATABASE WRITTEN ON FILE  parm.xml                                                                                                                                                                                                                                                            

     EXIT THE MAPDL POST1 DATABASE PROCESSOR


     ***** ROUTINE COMPLETED *****  CP =         2.528



     PRINTOUT RESUMED BY /GOP

     *GET  _WALLDONE  FROM  ACTI  ITEM=TIME WALL  VALUE=  19.2102778    

     PARAMETER _PREPTIME =     0.000000000    

     PARAMETER _SOLVTIME =     1.000000000    

     PARAMETER _POSTTIME =     0.000000000    

     PARAMETER _TOTALTIM =     1.000000000    

     *GET  _DLBRATIO  FROM  ACTI  ITEM=SOLU DLBR  VALUE=  1.09239130    

     *GET  _COMBTIME  FROM  ACTI  ITEM=SOLU COMB  VALUE= 0.439206732E-02

     *GET  _SSMODE   FROM  ACTI  ITEM=SOLU SSMM  VALUE=  2.00000000    

     *GET  _NDOFS    FROM  ACTI  ITEM=SOLU NDOF  VALUE=  3373.00000    

     /FCLEAN COMMAND REMOVING ALL LOCAL FILES
     --- Total number of nodes = 3566
     --- Total number of elements = 786
     --- Element load balance ratio = 1.0923913
     --- Time to combine distributed files = 4.392067319E-03
     --- Sparse memory mode = 2
     --- Number of DOF = 3373

     EXIT MAPDL WITHOUT SAVING DATABASE


     NUMBER OF WARNING MESSAGES ENCOUNTERED=          1
     NUMBER OF ERROR   MESSAGES ENCOUNTERED=          0

    +--------------------- M A P D L   S T A T I S T I C S ------------------------+

    Release: 2025 R2            Build: 25.2       Update: UP20250519   Platform: LINUX x64   
    Date Run: 10/07/2025   Time: 19:12     Process ID: 20510
    Operating System: Ubuntu 20.04.6 LTS

    Processor Model: AMD EPYC 7763 64-Core Processor

    Compiler: Intel(R) Fortran Compiler Classic Version 2021.9  (Build: 20230302)
              Intel(R) C/C++ Compiler Classic Version 2021.9  (Build: 20230302)
              AOCL-BLAS 5.0.1 Build 20250320

    Number of machines requested            :    1
    Total number of cores available         :    8
    Number of physical cores available      :    4
    Number of processes requested           :    4
    Number of threads per process requested :    1
    Total number of cores requested         :    4 (Distributed Memory Parallel)               
    MPI Type: OPENMPI 
    MPI Version: Open MPI v4.0.5

    GPU Acceleration: Not Requested

    Job Name: file0
    Input File: dummy.dat

      Core                Machine Name   Working Directory
     -----------------------------------------------------
         0                4171735317d7   /github/home/.mw/Application Data/Ansys/v252/AnsysMech5D3E/Project_Mech_Files/SteadyStateThermal
         1                4171735317d7   /github/home/.mw/Application Data/Ansys/v252/AnsysMech5D3E/Project_Mech_Files/SteadyStateThermal
         2                4171735317d7   /github/home/.mw/Application Data/Ansys/v252/AnsysMech5D3E/Project_Mech_Files/SteadyStateThermal
         3                4171735317d7   /github/home/.mw/Application Data/Ansys/v252/AnsysMech5D3E/Project_Mech_Files/SteadyStateThermal
 
    Latency time from master to core     1 =    2.013 microseconds
    Latency time from master to core     2 =    2.022 microseconds
    Latency time from master to core     3 =    2.026 microseconds
 
    Communication speed from master to core     1 = 19758.71 MB/sec
    Communication speed from master to core     2 = 20228.76 MB/sec
    Communication speed from master to core     3 = 20258.66 MB/sec

    Total CPU time for main thread                    :        1.2 seconds
    Total CPU time summed for all threads             :        3.2 seconds

    Elapsed time spent obtaining a license            :        0.4 seconds
    Elapsed time spent pre-processing model (/PREP7)  :        0.0 seconds
    Elapsed time spent solution - preprocessing       :        0.1 seconds
    Elapsed time spent computing solution             :        0.5 seconds
    Elapsed time spent solution - postprocessing      :        0.0 seconds
    Elapsed time spent post-processing model (/POST1) :        0.0 seconds
 
    Equation solver used                              :            Sparse (symmetric)
    Equation solver computational rate                :       11.2 Gflops
    Equation solver effective I/O rate                :       10.6 GB/sec

    Sum of disk space used on all processes           :        5.5 MB

    Sum of memory used on all processes               :      191.0 MB
    Sum of memory allocated on all processes          :     2880.0 MB
    Physical memory available                         :         31 GB
    Total amount of I/O written to disk               :        0.0 GB
    Total amount of I/O read from disk                :        0.0 GB

    +------------------ E N D   M A P D L   S T A T I S T I C S -------------------+


     *-----------------------------------------------------------------------------*
     |                                                                             |
     |                               RUN COMPLETED                                 |
     |                                                                             |
     |-----------------------------------------------------------------------------|
     |                                                                             |
     |  Ansys MAPDL 2025 R2         Build 25.2         UP20250519    LINUX x64     |
     |                                                                             |
     |-----------------------------------------------------------------------------|
     |                                                                             |
     |  Database Requested(-db)     1024 MB     Scratch Memory Requested   1024 MB |
     |  Max Database Used(Master)      3 MB     Max Scratch Used(Master)     47 MB |
     |  Max Database Used(Workers)     1 MB     Max Scratch Used(Workers)    46 MB |
     |  Sum Database Used(All)         6 MB     Sum Scratch Used(All)       185 MB |
     |                                                                             |
     |-----------------------------------------------------------------------------|
     |                                                                             |
     |        CP Time      (sec) =          3.158       Time  =  19:12:38          |
     |        Elapsed Time (sec) =          4.000       Date  =  10/07/2025        |
     |                                                                             |
     *-----------------------------------------------------------------------------*




.. GENERATED FROM PYTHON SOURCE LINES 714-716

Print the project tree
~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 716-719

.. code-block:: Python


    app.print_tree()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ├── Project
    |  ├── Model
    |  |  ├── Geometry Imports (✓)
    |  |  |  ├── Geometry Import (✓)
    |  |  ├── Geometry (✓)
    |  |  |  ├── Part4
    |  |  |  |  ├── Part4
    |  |  |  ├── Part3
    |  |  |  |  ├── Part3
    |  |  |  ├── Part2
    |  |  |  |  ├── Part2
    |  |  |  ├── Part1
    |  |  |  |  ├── Part1
    |  |  ├── Construction Geometry (✓)
    |  |  |  ├── Path (✓)
    |  |  |  ├── Surface (✓)
    |  |  ├── Materials (✓)
    |  |  |  ├── Structural Steel (✓)
    |  |  ├── Coordinate Systems (✓)
    |  |  |  ├── Global Coordinate System (✓)
    |  |  |  ├── Coordinate System (✓)
    |  |  |  ├── Coordinate System 2 (✓)
    |  |  ├── Remote Points (✓)
    |  |  ├── Connections (✓)
    |  |  |  ├── Contacts (✓)
    |  |  |  |  ├── Contact Region (✓)
    |  |  |  |  ├── Contact Region 2 (✓)
    |  |  |  |  ├── Contact Region 3 (✓)
    |  |  ├── Mesh (✓)
    |  |  ├── Named Selections
    |  |  |  ├── Face1 (✓)
    |  |  |  ├── Face2 (✓)
    |  |  |  ├── Face3 (✓)
    |  |  |  ├── Body1 (✓)
    |  |  ├── Steady-State Thermal (✓)
    |  |  |  ├── Initial Temperature (✓)
    |  |  |  ├── Analysis Settings (✓)
    |  |  |  ├── Temperature (✓)
    |  |  |  ├── Temperature 2 (✓)
    |  |  |  ├── Radiation (✓)
    |  |  |  ├── Solution (✓)
    |  |  |  |  ├── Solution Information (✓)
    |  |  |  |  ├── Temperature (✓)
    |  |  |  |  ├── Temperature 2 (✓)
    |  |  |  |  ├── Temperature 3 (✓)
    |  |  |  |  ├── Temperature 4 (✓)
    |  |  |  |  ├── Total Heat Flux (✓)
    |  |  |  |  ├── Directional Heat Flux (✓)
    |  |  |  |  ├── Thermal Error (✓)
    |  |  |  |  ├── Temperature Probe (✓)
    |  |  |  |  ├── Heat Flux Probe (✓)
    |  |  |  |  ├── Reaction Probe (✓)
    |  |  |  |  ├── Radiation Probe (✓)




.. GENERATED FROM PYTHON SOURCE LINES 720-722

Clean up the app and downloaded files
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 722-732

.. code-block:: Python


    # Save the project file
    mechdat_path = output_path / "steady_state_thermal.mechdat"
    app.save(str(mechdat_path))

    # Close the app
    app.close()

    # Delete the example files
    delete_downloads()




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 17.210 seconds)


.. _sphx_glr_download_examples_gallery_examples_01_basic_steady_state_thermal_analysis.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: steady_state_thermal_analysis.ipynb <steady_state_thermal_analysis.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: steady_state_thermal_analysis.py <steady_state_thermal_analysis.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: steady_state_thermal_analysis.zip <steady_state_thermal_analysis.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
# Check https://flit.readthedocs.io/en/latest/pyproject_toml.html for all available sections
name = "ansys-mechanical-core"
version = "0.11.1"
description = "A python wrapper for Ansys Mechanical"
readme = "README.rst"
requires-python = ">=3.9,<4.0"
license = {file = "LICENSE"}
authors = [{name = "ANSYS, Inc.", email = "pyansys.core@ansys.com"}]
maintainers = [{name = "ANSYS, Inc.", email = "pyansys.core@ansys.com"}]
keywords = ["pymechanical", "mechanical", "ansys", "pyansys",]

classifiers = [
    "Development Status :: 4 - Beta",
    'Intended Audience :: Science/Research',
    'Topic :: Scientific/Engineering :: Information Analysis',
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "ansys-api-mechanical==0.1.2",
    "ansys-mechanical-env==0.1.6",
    "ansys-platform-instancemanagement>=1.0.1",
    "ansys-pythonnet>=3.1.0rc2",
    "ansys-tools-path>=0.3.1",
    "appdirs>=1.4.0",
    "click>=8.1.3", # for CLI interface
    "clr-loader==0.2.6",
    "grpcio>=1.30.0",
    "protobuf>=3.12.2,<6",
    "tqdm>=4.45.0",
]

[project.urls]
Homepage = "https://github.com/ansys/pymechanical"
Documentation = "https://mechanical.docs.pyansys.com"
Repository = "https://github.com/ansys/pymechanical"
Issues  = "https://github.com/ansys/pymechanical/issues"
Changelog = "https://mechanical.docs.pyansys.com/version/stable/changelog.html"

[project.optional-dependencies]
tests = [
    "pytest==8.2.2",
    "pytest-cov==5.0.0",
    "pytest-print==1.0.0",
]
doc = [
    "sphinx==7.3.7",
    "ansys-sphinx-theme[autoapi]==0.16.5",
    "grpcio==1.64.1",
    "imageio-ffmpeg==0.5.1",
    "imageio==2.34.1",
    "jupyter_sphinx==0.5.3",
    "jupyterlab>=3.2.8",
    "matplotlib==3.9.0",
    "numpy==1.26.4",
    "numpydoc==1.7.0",
    "pandas==2.2.2",
    "panel==1.4.4",
    "plotly==5.22.0",
    "pypandoc==1.13",
    "pytest-sphinx==0.6.3",
    "pythreejs==2.4.2",
    "pyvista==0.43.9",
    "sphinx-autobuild==2024.4.16",
    "sphinx-autodoc-typehints==2.1.1",
    "sphinx-copybutton==0.5.2",
    "sphinx_design==0.6.0",
    "sphinx-gallery==0.16.0",
    "sphinx-notfound-page==1.0.2",
    "sphinxcontrib-websupport==1.2.7",
    "sphinxemoji==0.3.1",
]
viz = [
    "pyvista>=0.39.1",
    "usd-core==24.3",
]

[project.scripts]
ansys-mechanical = "ansys.mechanical.core.run:cli"

[tool.flit.module]
name = "ansys.mechanical.core"

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
force_sort_within_sections = true
line_length = 100

src_paths = ["doc", "src", "tests"]

# ========================================================
# Pytest and Coverage Configuration
# ========================================================

[tool.coverage.run]
relative_files = true
source = ["ansys.mechanical"]

[tool.coverage.report]
show_missing = true

[tool.coverage.html]
directory = ".cov/html"

[tool.coverage.xml]
output = ".cov/coverage.xml"

[tool.pytest.ini_options]
minversion = "7.1"
addopts = """-ra -s --durations=0 --cov=ansys.mechanical --cov-report html:.cov/html \
 --cov-report xml:.cov/xml --cov-report term --cov-append -vv --print --print-relative-time"""
# addopts = """-ra -s -m remote_session_launch --durations=0 --cov=ansys.mechanical --cov-report html:.cov/html \
# --cov-report xml:.cov/xml --cov-report term -vv --print --print-relative-time"""
# addopts = """-ra -s -m 'remote_session_launch or remote_session_connect' --durations=0 --cov=ansys.mechanical \
# --cov-report html:.cov/html --cov-report xml:.cov/xml --cov-report term -vv --print --print-relative-time"""
# addopts = """-ra -s -m 'remote_session_launch or remote_session_connect or embedding' --durations=0
# --cov=ansys.mechanical --cov-report html:.cov/html --cov-report xml:.cov/xml --cov-report \
# term -vv --print --print-relative-time"""
testpaths = [
    "tests",
]
markers = [
    "embedding: tests that embed Mechanical in the python process",
    "embedding_scripts: embedding tests that use subprocess",
    "python_env: tests that check for an appropriate python environment",
    "remote_session_launch: tests that launch Mechanical and work with gRPC server inside it",
    "remote_session_connect: tests that connect to Mechanical and work with gRPC server inside it",
    "minimum_version(num): tests that run if ansys-version is greater than or equal to the minimum version provided",
    "windows_only: tests that run if the testing platform is on Windows",
    "cli: tests for the Command Line Interface",
]
xfail_strict = true

# ========================================================
# Towncrier Configuration
# ========================================================

[tool.towncrier]
package = "ansys.mechanical.core"
directory = "doc/changelog.d"
filename = "doc/source/changelog.rst"
start_string = ".. towncrier release notes start\n"
underlines = ["", "", ""]
template = "doc/changelog.d/changelog_template.jinja"
title_format = "`{version} <https://github.com/ansys/pymechanical/releases/tag/v{version}>`_ - {project_date}"
issue_format = "`#{issue} <https://github.com/ansys/pymechanical/pull/{issue}>`_"

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true

[[tool.towncrier.type]]
directory = "dependencies"
name = "Dependencies"
showcontent = true

[[tool.towncrier.type]]
directory = "miscellaneous"
name = "Miscellaneous"
showcontent = true

# ========================================================
# Flake8 Configuration
# ========================================================

[tool.flake8]
exclude = ["venv", "__init__.py", "doc/_build", ".venv"]
select = [
    "W191", "W291", "W293", "W391", "E115", "E117",
    "E122", "E124", "E125", "E225", "E231", "E301",
    "E303", "E501", "F401", "F403"
]
count = true
max-complexity = 10
max-line-length = 100
statistics = true

# ========================================================
# Tox Configuration
# ========================================================

[tool.tox]
legacy_tox_ini = """
[tox]
description = Default tox environments list
envlist =
    style,{py38,py39,py310,py311}{,-coverage},doc
passenv =  AWP_ROOT
skip_missing_interpreters = true
isolated_build = true
isolated_build_env = build

[gh-actions]
description = The tox environment to be executed in gh-actions for a given python version
python =
    3.9: style,py39-coverage,doc
    3.10: style,py310-coverage,doc
    3.11: style,py311-coverage,doc
    3.12: style,py311-coverage,doc

[testenv]
description = Checks for project unit tests and coverage (if desired)
basepython =
    py39: python3.9
    py310: python3.10
    py311: python3.11
    py312: python3.12
    py: python3
    {style,reformat,doc,build}: python3
passenv = *
setenv =
    PYTHONUNBUFFERED = yes
    coverage: PYTEST_EXTRA_ARGS = --cov=ansys.mechanical --cov-report=term --cov-report=xml:.cov/coverage.xml --cov-report=html:.cov/html
extras = tests
commands =
    pytest {env:PYTEST_MARKERS:} {env:PYTEST_EXTRA_ARGS:} {posargs:-vv}

[testenv:style]
description = Checks project code style
passenv = *
skip_install = true
deps =
    pre-commit
commands =
    pre-commit install
    pre-commit run --all-files --show-diff-on-failure

[testenv:doc]
description = Check if documentation generates properly
passenv = *
extras = doc
commands =
    sphinx-build -d "{toxworkdir}/doc_doctree" doc/source "{toxinidir}/doc/_build/html" --color -vW -bhtml
"""
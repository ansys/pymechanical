name: GitHub CI
on:
  pull_request:
  workflow_dispatch:
  push:
    tags:
      - "*"
    branches:
      - main
      - release/*

env:
  PYMECHANICAL_PORT: 10000  # default won't work on GitHub runners
  PYMECHANICAL_START_INSTANCE: FALSE
  DOCKER_PACKAGE: ghcr.io/ansys/mechanical
  DOCKER_IMAGE_VERSION: 23.1.0
  DOCKER_MECH_CONTAINER_NAME: mechanical
  MAIN_PYTHON_VERSION: '3.10'
  PACKAGE_NAME: ansys-mechanical-core
  PACKAGE_NAMESPACE: ansys.mechanical.core
  DOCUMENTATION_CNAME: mechanical.docs.pyansys.com

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys code style checks
        uses: ansys/actions/code-style@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  embedding-tests:
    name: Embedding testing and coverage
    runs-on: ubuntu-latest
    needs: [style]
    container:
      image: ghcr.io/ansys/mechanical:23.2.0
      options: --entrypoint /bin/bash
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:

      - uses: actions/checkout@v4
      - name: Set up python and pip
        run: |
         apt update
         apt install software-properties-common -y
         add-apt-repository ppa:deadsnakes/ppa -y
         apt install python${{ matrix.python-version }} -y
         apt install python3-pip
         ln -s /usr/bin/python${{ matrix.python-version }} /usr/bin/python
         apt install python${{ matrix.python-version }}-venv -y
         python -m ensurepip --default-pip
         python --version
         pip --version

      - name: Install dependencies
        run: |
          apt update
          apt install -y lsb-release
          pip3 install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org pip setuptools
          pip3 install --upgrade pip flit

      - name: Install packages for testing
        run: |
          pip install .[tests]

          - name: Set environment variable
          run: echo "ANSYSCL${{ needs.revn-variations.outputs.test_lic }}_DIR=/install/ansys_inc/v${{ needs.revn-variations.outputs.test_lic }}/licensingclient" >> $GITHUB_ENV
  
      - name: Unit Testing and coverage
        env:
          LICENSE_SERVER: ${{ secrets.LICENSE_SERVER }}
          ANSYSLMD_LICENSE_FILE: 1055@${{ secrets.LICENSE_SERVER }}
          ANSYS_WORKBENCH_LOGGING_CONSOLE: 0
          ANSYS_WORKBENCH_LOGGING: 0
          ANSYS_WORKBENCH_LOGGING_FILTER_LEVEL: 2
          NUM_CORES: 1
        run: |
          /install/ansys_inc/v${{ needs.revn-variations.outputs.test_lic }}/aisol/.workbench_lite pytest -m embedding -k logging > pytest_output.txt || true
          cat pytest_output.txt
          #
          # Check if failure occurred
          #
          output=$(grep -c "FAILURES" pytest_output.txt || true)
          if [ $output -eq 0 ]; then
            echo "Pytest execution succeeded"
            exit 0
          else
            echo "Pytest execution failed"
            exit 1
          fi